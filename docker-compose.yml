version: "3.9"

services:
  nginx-reverse:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    networks:
      - internal
    depends_on:
      - idk-backend
      - idk-frontend
      - idk-frontend-2

  idk-frontend:
    build:
      context: ../idk-frontend
      dockerfile: ./Dockerfile
    networks:
      - internal
    expose:
      - 80
    restart: always

  idk-frontend-2:
    build:
      context: ../idk-frontend-2/client-webshop
      dockerfile: ./Dockerfile
    networks:
      - internal
    expose:
      - 80
    restart: always

  idk-backend:
    build:
      context: ../idk-backend
      dockerfile: ./Dockerfile
    environment:
      - SPRING_DATASOURCE_USERNAME
      - SPRING_DATASOURCE_PASSWORD
      - SPRING_DATASOURCE_URL
    depends_on:
      - db
      - minio
    networks:
      - internal
    expose:
      - 8080
    restart: always

  db:
    image: postgres:latest
    ports:
      - "5432:5432" # For development purposes (remove before deployment)
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin1234
      POSTGRES_DB: idk
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - internal
    expose:
      - 5432
    restart: always

  minio-setup:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: [ "/bin/sh", "-c", "sh /setup/minio-setup.sh" ]
    networks:
      - internal
    volumes:
      - ./minio-setup.sh:/setup/minio-setup.sh
      - ./minio-policy.json:/setup/minio-policy.json

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin1234
    volumes:
      - minio-data:/data
    networks:
      - internal
    expose:
      - 9000
    ports:
      - "9001:9001" # Allow for management
    command: server /data --console-address ":9001"
    restart: always

networks:
  internal:
    driver: bridge
    external: false

volumes:
  db-data:
  minio-data:
